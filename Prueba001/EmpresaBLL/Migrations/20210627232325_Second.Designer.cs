// <auto-generated />
using System;
using EmpresaBLL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmpresaBLL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210627232325_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmpresaBLL.Models.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("contactoid")
                        .HasColumnType("int");

                    b.Property<int?>("telefonoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("contactoid");

                    b.HasIndex("telefonoId");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("EmpresaBLL.Models.Contacto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("EmpresaBLL.Models.Telefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("compania")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("contactoid")
                        .HasColumnType("int");

                    b.Property<string>("numero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("contactoid");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("EmpresaBLL.Models.Agenda", b =>
                {
                    b.HasOne("EmpresaBLL.Models.Contacto", "contacto")
                        .WithMany("Agendas")
                        .HasForeignKey("contactoid");

                    b.HasOne("EmpresaBLL.Models.Telefono", "telefono")
                        .WithMany("Agendas")
                        .HasForeignKey("telefonoId");

                    b.Navigation("contacto");

                    b.Navigation("telefono");
                });

            modelBuilder.Entity("EmpresaBLL.Models.Telefono", b =>
                {
                    b.HasOne("EmpresaBLL.Models.Contacto", "contacto")
                        .WithMany("Telefonos")
                        .HasForeignKey("contactoid");

                    b.Navigation("contacto");
                });

            modelBuilder.Entity("EmpresaBLL.Models.Contacto", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("EmpresaBLL.Models.Telefono", b =>
                {
                    b.Navigation("Agendas");
                });
#pragma warning restore 612, 618
        }
    }
}
